{"version":3,"sources":["webpack://prep-assignment-calendar/./src/js/board/Board.js","webpack://prep-assignment-calendar/./src/js/board/Status.js","webpack://prep-assignment-calendar/./src/js/board/Task.js","webpack://prep-assignment-calendar/./src/js/board/boardEventHandler.js","webpack://prep-assignment-calendar/./src/js/calendar/CalendarController.js","webpack://prep-assignment-calendar/./src/js/calendar/CalendarViewer.js","webpack://prep-assignment-calendar/./src/js/calendar/DateOfCalendar.js","webpack://prep-assignment-calendar/./src/js/calendar/Month.js","webpack://prep-assignment-calendar/./src/js/calendar/Now.js","webpack://prep-assignment-calendar/./src/js/calendar/SelectedDate.js","webpack://prep-assignment-calendar/./src/js/calendar/Year.js","webpack://prep-assignment-calendar/./src/js/calendar/YearRepository.js","webpack://prep-assignment-calendar/./src/js/calendar/calendarEventHandler.js","webpack://prep-assignment-calendar/./src/js/calendar/day.js","webpack://prep-assignment-calendar/./src/js/element.js","webpack://prep-assignment-calendar/webpack/bootstrap","webpack://prep-assignment-calendar/webpack/runtime/define property getters","webpack://prep-assignment-calendar/webpack/runtime/hasOwnProperty shorthand","webpack://prep-assignment-calendar/webpack/runtime/make namespace object","webpack://prep-assignment-calendar/./src/js/index.js"],"names":["Board","dateOfCalendar","currentDisplayingDateOfCalendar","isVisible","date","getDateObject","getDate","getMonth","getFullYear","Status","newStatusIndex","indexOf","length","console","log","Task","content","assignedDate","Date","update","newTextContent","ERROR_MESSAGE_NO_CONTENT_IN_TASK","clickedDateOfCalendar","isBoardVisible","handleBoardViewWhenDateClick","removePreviousBoardButtonEventListner","displayBoardDateText","handleBoardButtons","handleDateClickWhenBoardVisible","handleDateClickWhenBoardInvisible","$boardButtonAdd","boardButtonAddCallback","$boardButtonDeleteAll","boardButtonDeleteAllCallback","clickedDate","$boardDateText","handleBoardButtonAdd","handleBoardButtonDeleteAll","displayTaskSubmissionForm","clickTaskSubmissionOKCallBack","clickTaskSubmissionCancelCallBack","displayBoardFormContainerElement","handleClickTaskSubmissionOK","handleClickTaskSubmissionCancel","$taskSubmissionOK","$taskSubmissionCancel","$boardFormContainer","$taskContentTextInput","addTask","removeTaskSubmissionForm","displayBoard","CalendarViewer","alert","clearInputTextArea","removeTaskList","removeBoardFormContainerElement","deleteAllTasks","sameDateClicked","removeBoard","$taskList","getDateNumber","previousClickedDateObject","removeBoardElement","$boardElement","displayBoardElement","displayTasksOnBoard","tasks","getAllTasks","forEach","createAndAddTaskElement","$taskElement","$taskStatus","$taskContent","$taskButtonContainer","$updateButton","$deleteButton","task","createTaskElements","addClassNameToTaskElements","addTextContentToTaskElements","combineTaskElements","colorTaskSatus","getStatus","addEventListenerToTaskButtons","document","createElement","classList","add","textContent","getText","getContent","appendChild","status","style","backgroundColor","addEventListener","handleClickUpdateTaskButton","handleClickModifyingContent","handleClickDeleteTaskButton","updateStatus","$itsTaskElement","$itsTaskContent","innerHTML","$inputElementForModifying","value","handleEnterModifyingInput","bind","insertBefore","event","keyCode","updateTextContent","getAssignedDate","deleteTask","CalendarController","$previousMonthButton","handleMoveMonthButton","$nextMonthButton","dateOfCalendarInstance","$dateElement","taskLength","getTaskLength","$notification","thisYear","YearRepository","SelectedDate","thisMonth","dayOfFirstDate","getDayOfFirstDate","lastDate","getLastDate","i","indexForDate","$allDatesInCalendar","getDateOfCalendarByNumber","Now","clickCallBack","handleDateClick","totalCalendarCells","className","removeEventListener","$selectedDayText","DAYS","$selectedDateText","$selectedMonthText","Month","$selectedYearText","now","getElementById","getDay","header","querySelectorAll","th","DateOfCalendar","dateNumber","monthObject","yearObject","getNumber","sortTasks","sort","task1","task2","statusList","index1","index2","newTask","push","taskIndex","splice","monthNumber","find","newDate","dateObject","valueOf","newMonthNumber","setMonth","newDateNumber","setDate","Year","yearNumber","addMonthsToRepository","newMonth","month","getYearNumber","newYear","filter","clickedButton","target","$differenceWithClickedDate","handleTodayClick","handleClickDifferentDate","ONE_DAY","$dateDifferenceFromNow","Math","ceil","displayClickedResult","abs"],"mappings":"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","file":"bundle.js","sourcesContent":["export default class Board {\r\n  static isVisible;\r\n  static currentDisplayingDateOfCalendar;\r\n  static lastSelectedDateOfCalendar;\r\n\r\n  constructor() {} // 이미 Board는 존재하니까 필요 없을 것 같다.\r\n  static display(dateOfCalendar) {\r\n    this.currentDisplayingDateOfCalendar = dateOfCalendar;\r\n  }\r\n  static getVisibility() {\r\n    return this.isVisible;\r\n  }\r\n  static isDateSameWithPreviousDate(dateOfCalendar) {\r\n    const date = dateOfCalendar.getDateObject();\r\n    return (\r\n      this.currentDisplayingDateOfCalendar.getDate() === date.getDate() &&\r\n      this.currentDisplayingDateOfCalendar.getMonth() === date.getMonth() &&\r\n      this.currentDisplayingDateOfCalendar.getFullYear() === date.getFullYear()\r\n    );\r\n  }\r\n}\r\n","export default class Status {\r\n  #statusName;\r\n  static #TODO = \"TODO\";\r\n  static #DOING = \"DOING\";\r\n  static #DONE = \"DONE\";\r\n  static #statusRepository = [this.#TODO, this.#DOING, this.#DONE];\r\n  static #statusColor = [\"white\", \"yellowgreen\", \"red\"];\r\n  #cannotUpdateMessage = `현재 상태가 ${\r\n    Status.#DONE\r\n  } 입니다. 더 이상 업데이트 할 수 없습니다.`;\r\n\r\n  constructor() {\r\n    this.#statusName = Status.#statusRepository[0];\r\n  }\r\n\r\n  getText() {\r\n    return this.#statusName;\r\n  }\r\n\r\n  update() {\r\n    const newStatusIndex =\r\n      Status.#statusRepository.indexOf(this.#statusName) + 1;\r\n    if (newStatusIndex === Status.#statusRepository.length) {\r\n      console.log(this.#cannotUpdateMessage);\r\n      return;\r\n    }\r\n    this.#statusName = Status.#statusRepository[newStatusIndex];\r\n  }\r\n\r\n  static getRepository() {\r\n    return Status.#statusRepository;\r\n  }\r\n  static getColors() {\r\n    return Status.#statusColor;\r\n  }\r\n}\r\n","import Status from \"./Status\";\r\n\r\nexport default class Task {\r\n  #createdTime;\r\n  #content;\r\n  #status;\r\n  #assignedDate;\r\n\r\n  constructor(content, assignedDate) {\r\n    this.#createdTime = new Date();\r\n    this.#content = content;\r\n    this.#status = new Status();\r\n    this.#assignedDate = assignedDate;\r\n  }\r\n\r\n  getContent() {\r\n    return this.#content;\r\n  }\r\n\r\n  getStatus() {\r\n    return this.#status;\r\n  }\r\n\r\n  updateStatus() {\r\n    this.#status.update();\r\n  }\r\n\r\n  getAssignedDate() {\r\n    return this.#assignedDate;\r\n  }\r\n  updateTextContent(newTextContent) {\r\n    this.#content = newTextContent;\r\n  }\r\n}\r\n","import {\r\n  $boardElement,\r\n  $boardDateText,\r\n  $boardButtonAdd,\r\n  $boardButtonDeleteAll,\r\n  $boardFormContainer,\r\n  $taskContentTextInput,\r\n  $taskSubmissionOK,\r\n  $taskSubmissionCancel,\r\n  $taskList,\r\n} from \"../element\";\r\n\r\nimport { previousClickedDateObject } from \"../calendar/calendarEventHandler\";\r\nimport Status from \"./Status\";\r\nimport CalendarViewer from \"../calendar/CalendarViewer\";\r\n\r\nconst ERROR_MESSAGE_NO_CONTENT_IN_TASK = \"할 일에 내용이 없습니다!\";\r\n\r\nlet clickedDateOfCalendar;\r\nlet isBoardVisible = false;\r\nexport const handleBoardViewWhenDateClick = (dateOfCalendar) => {\r\n  clickedDateOfCalendar = dateOfCalendar;\r\n  removePreviousBoardButtonEventListner();\r\n\r\n  displayBoardDateText();\r\n  handleBoardButtons();\r\n\r\n  if (isBoardVisible) {\r\n    handleDateClickWhenBoardVisible();\r\n    return;\r\n  }\r\n  handleDateClickWhenBoardInvisible();\r\n};\r\n\r\nconst removePreviousBoardButtonEventListner = () => {\r\n  $boardButtonAdd.removeEventListener(\"click\", boardButtonAddCallback);\r\n  $boardButtonDeleteAll.removeEventListener(\r\n    \"click\",\r\n    boardButtonDeleteAllCallback\r\n  );\r\n};\r\n\r\nconst displayBoardDateText = () => {\r\n  const clickedDate = clickedDateOfCalendar.getDateObject();\r\n  $boardDateText.textContent = `TO DO LIST${\r\n    clickedDate.getMonth() + 1\r\n  }.${clickedDate.getDate()}`;\r\n};\r\n\r\nlet boardButtonAddCallback;\r\nlet boardButtonDeleteAllCallback;\r\nconst handleBoardButtons = () => {\r\n  boardButtonAddCallback = handleBoardButtonAdd();\r\n  boardButtonDeleteAllCallback = handleBoardButtonDeleteAll();\r\n\r\n  $boardButtonAdd.addEventListener(\"click\", boardButtonAddCallback);\r\n  $boardButtonDeleteAll.addEventListener(\"click\", boardButtonDeleteAllCallback);\r\n};\r\nconst handleBoardButtonAdd = () => {\r\n  return () => {\r\n    displayTaskSubmissionForm();\r\n  };\r\n};\r\n\r\nlet clickTaskSubmissionOKCallBack;\r\nlet clickTaskSubmissionCancelCallBack;\r\nconst displayTaskSubmissionForm = () => {\r\n  displayBoardFormContainerElement();\r\n\r\n  clickTaskSubmissionOKCallBack = handleClickTaskSubmissionOK();\r\n  clickTaskSubmissionCancelCallBack = handleClickTaskSubmissionCancel();\r\n  $taskSubmissionOK.addEventListener(\"click\", clickTaskSubmissionOKCallBack);\r\n  $taskSubmissionCancel.addEventListener(\r\n    \"click\",\r\n    clickTaskSubmissionCancelCallBack\r\n  );\r\n};\r\n\r\nconst displayBoardFormContainerElement = () => {\r\n  $boardFormContainer.classList.remove(\"board__form-container--invisible\");\r\n  $boardFormContainer.classList.add(\"board__form-container--visible\");\r\n};\r\n\r\nconst handleClickTaskSubmissionOK = () => {\r\n  return () => {\r\n    if ($taskContentTextInput.value.trim()) {\r\n      clickedDateOfCalendar.addTask($taskContentTextInput.value);\r\n      removeTaskSubmissionForm();\r\n      displayBoard();\r\n      CalendarViewer.display();\r\n      return;\r\n    }\r\n    alert(ERROR_MESSAGE_NO_CONTENT_IN_TASK);\r\n  };\r\n};\r\n\r\nconst removeTaskSubmissionForm = () => {\r\n  $taskSubmissionOK.removeEventListener(\"click\", clickTaskSubmissionOKCallBack);\r\n  $taskSubmissionCancel.removeEventListener(\r\n    \"click\",\r\n    clickTaskSubmissionCancelCallBack\r\n  );\r\n  clearInputTextArea();\r\n  removeTaskList();\r\n  removeBoardFormContainerElement();\r\n};\r\n\r\nconst handleClickTaskSubmissionCancel = () => {\r\n  return () => {\r\n    removeTaskSubmissionForm();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst clearInputTextArea = () => {\r\n  $taskContentTextInput.value = \"\";\r\n};\r\n\r\nconst removeBoardFormContainerElement = () => {\r\n  $boardFormContainer.classList.remove(\"board__form-container--visible\");\r\n  $boardFormContainer.classList.add(\"board__form-container--invisible\");\r\n};\r\n\r\nconst handleBoardButtonDeleteAll = () => {\r\n  return () => {\r\n    clickedDateOfCalendar.deleteAllTasks();\r\n    displayBoard();\r\n    CalendarViewer.display();\r\n  };\r\n};\r\n\r\nconst handleDateClickWhenBoardVisible = () => {\r\n  if (sameDateClicked()) {\r\n    removeBoard();\r\n    return;\r\n  }\r\n  displayBoard();\r\n};\r\n\r\nconst removeTaskList = () => {\r\n  $taskList.innerHTML = \"\";\r\n};\r\n\r\nconst sameDateClicked = () => {\r\n  // TODO: 오류 있음. 완전한 비교가 될 수 있도록 고칠 것\r\n  return (\r\n    clickedDateOfCalendar.getDateNumber() ===\r\n    previousClickedDateObject.getDate()\r\n  );\r\n};\r\n\r\nconst handleDateClickWhenBoardInvisible = () => {\r\n  displayBoard();\r\n};\r\n\r\nexport const removeBoard = () => {\r\n  removeBoardElement();\r\n  removeTaskList();\r\n  clearInputTextArea();\r\n};\r\n\r\nconst removeBoardElement = () => {\r\n  $boardElement.classList.remove(\"board--visible\");\r\n  $boardElement.classList.add(\"board--invisible\");\r\n  isBoardVisible = false;\r\n};\r\n\r\nconst displayBoard = () => {\r\n  displayBoardElement();\r\n  removeTaskList();\r\n  clearInputTextArea();\r\n  displayTasksOnBoard();\r\n};\r\n\r\nconst displayBoardElement = () => {\r\n  $boardElement.classList.add(\"board--visible\");\r\n  $boardElement.classList.remove(\"board--invisible\");\r\n  isBoardVisible = true;\r\n};\r\n\r\nconst displayTasksOnBoard = () => {\r\n  const tasks = clickedDateOfCalendar.getAllTasks();\r\n  tasks.forEach(createAndAddTaskElement);\r\n};\r\n\r\nlet $taskElement;\r\nlet $taskStatus;\r\nlet $taskContent;\r\nlet $taskButtonContainer;\r\nlet $updateButton;\r\nlet $deleteButton;\r\nconst createAndAddTaskElement = (task) => {\r\n  createTaskElements();\r\n  addClassNameToTaskElements();\r\n  addTextContentToTaskElements(task);\r\n  combineTaskElements();\r\n  colorTaskSatus(task.getStatus()); // status 엘리먼트가 만들어지고 나서 수행\r\n  addEventListenerToTaskButtons(task);\r\n};\r\n\r\nconst createTaskElements = () => {\r\n  $taskElement = document.createElement(\"li\");\r\n  $taskStatus = document.createElement(\"span\");\r\n  $taskContent = document.createElement(\"span\");\r\n  $taskButtonContainer = document.createElement(\"span\");\r\n  $updateButton = document.createElement(\"button\");\r\n  $deleteButton = document.createElement(\"button\");\r\n};\r\n\r\nconst addClassNameToTaskElements = () => {\r\n  $taskElement.classList.add(\"task\");\r\n  $taskStatus.classList.add(\"task__status\");\r\n  $taskContent.classList.add(\"task__content\");\r\n  $taskButtonContainer.classList.add(\"task__button-container\");\r\n  $updateButton.classList.add(\"task__button\");\r\n  $updateButton.classList.add(\"task__button--update\");\r\n  $deleteButton.classList.add(\"task__button\");\r\n  $deleteButton.classList.add(\"task__button--delete\");\r\n};\r\n\r\nconst addTextContentToTaskElements = (task) => {\r\n  $taskStatus.textContent = task.getStatus().getText();\r\n  $taskContent.textContent = task.getContent();\r\n  $updateButton.textContent = \"✅\";\r\n  $deleteButton.textContent = \"⛔\";\r\n};\r\n\r\nconst combineTaskElements = () => {\r\n  $taskButtonContainer.appendChild($updateButton);\r\n  $taskButtonContainer.appendChild($deleteButton);\r\n  $taskElement.appendChild($taskStatus);\r\n  $taskElement.appendChild($taskContent);\r\n  $taskElement.appendChild($taskButtonContainer);\r\n  $taskList.appendChild($taskElement);\r\n};\r\n\r\nconst colorTaskSatus = (status) => {\r\n  $taskStatus.style.backgroundColor = Status.getColors()[\r\n    Status.getRepository().indexOf(status.getText())\r\n  ];\r\n};\r\n\r\nconst addEventListenerToTaskButtons = (task) => {\r\n  $taskStatus.addEventListener(\"click\", handleClickUpdateTaskButton(task));\r\n  $taskContent.addEventListener(\r\n    \"click\",\r\n    handleClickModifyingContent(\r\n      $taskElement,\r\n      $taskContent,\r\n      $taskButtonContainer,\r\n      task\r\n    )\r\n  );\r\n  $updateButton.addEventListener(\"click\", handleClickUpdateTaskButton(task));\r\n  $deleteButton.addEventListener(\"click\", handleClickDeleteTaskButton(task));\r\n};\r\n\r\nconst handleClickUpdateTaskButton = (task) => {\r\n  return () => {\r\n    task.updateStatus();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst handleClickModifyingContent = (\r\n  $itsTaskElement,\r\n  $itsTaskContent,\r\n  $taskButtonContainer,\r\n  task\r\n) => {\r\n  return () => {\r\n    $itsTaskContent.innerHTML = \"\";\r\n    const $inputElementForModifying = document.createElement(\"input\");\r\n    $inputElementForModifying.value = task.getContent();\r\n    $inputElementForModifying.addEventListener(\r\n      \"keydown\",\r\n      handleEnterModifyingInput.bind(null, task, $inputElementForModifying)\r\n    );\r\n    $itsTaskElement.insertBefore(\r\n      $inputElementForModifying,\r\n      $taskButtonContainer\r\n    );\r\n  };\r\n};\r\n\r\nconst handleEnterModifyingInput = (task, $inputElementForModifying, event) => {\r\n  if (event.keyCode === 13) {\r\n    const newTextContent = $inputElementForModifying.value;\r\n    task.updateTextContent(newTextContent);\r\n    displayBoard();\r\n  }\r\n};\r\n\r\nconst handleClickDeleteTaskButton = (task) => {\r\n  return () => {\r\n    task.getAssignedDate().deleteTask(task);\r\n    displayBoard();\r\n    CalendarViewer.display();\r\n  };\r\n};\r\n","import { handleMoveMonthButton } from \"./calendarEventHandler\";\r\nimport CalendarViewer from \"./CalendarViewer\";\r\nimport Now from \"./Now\";\r\nimport { $previousMonthButton, $nextMonthButton } from \"../element\";\r\n\r\nexport default class CalendarController {\r\n  constructor() {\r\n    CalendarViewer.display();\r\n    this.#initialAddingEventListner();\r\n  }\r\n\r\n  #initialAddingEventListner() {\r\n    $previousMonthButton.addEventListener(\"click\", handleMoveMonthButton);\r\n    $nextMonthButton.addEventListener(\"click\", handleMoveMonthButton);\r\n  }\r\n}\r\n","import { DAYS } from \"./day\";\r\nimport Month from \"./Month\";\r\nimport SelectedDate from \"./SelectedDate\";\r\nimport YearRepository from \"./YearRepository\";\r\nimport { handleDateClick } from \"./calendarEventHandler\";\r\nimport {\r\n  $selectedDateText,\r\n  $selectedMonthText,\r\n  $selectedDayText,\r\n  $selectedYearText,\r\n  $allDatesInCalendar,\r\n} from \"../element\";\r\nimport Now from \"./Now\";\r\n\r\nexport default class CalendarViewer {\r\n  static #dateEventListenerRepository = {};\r\n\r\n  static display() {\r\n    CalendarViewer.#displayHeader();\r\n    CalendarViewer.#displayToday();\r\n\r\n    CalendarViewer.#displaySelectedCalendar();\r\n  }\r\n\r\n  static #displayHeader() {\r\n    const header = document.querySelectorAll(\"table tbody tr th\");\r\n    let i = 0;\r\n    header.forEach((th) => {\r\n      th.textContent = DAYS[i++];\r\n    });\r\n  }\r\n  static #displayToday() {\r\n    const now = Now.getDateObject();\r\n    document.getElementById(\"jsTodayDay\").textContent = DAYS[now.getDay()];\r\n    document.getElementById(\"jsTodayDate\").textContent = now.getDate();\r\n    document.getElementById(\"jsTodayMonth\").textContent = Month.getNames()[\r\n      now.getMonth()\r\n    ];\r\n    document.getElementById(\"jsTodayYear\").textContent = now.getFullYear();\r\n  }\r\n\r\n  static #displaySelectedCalendar() {\r\n    this.#displaySelectedDateText();\r\n    this.#displaySelectedDates();\r\n  }\r\n\r\n  static #displaySelectedDateText() {\r\n    $selectedDayText.textContent = DAYS[SelectedDate.getDay()];\r\n    $selectedDateText.textContent = SelectedDate.getDateNumber();\r\n    $selectedMonthText.textContent = Month.getNames()[SelectedDate.getMonth()];\r\n    $selectedYearText.textContent = SelectedDate.getFullYear();\r\n  }\r\n\r\n  static #displaySelectedDates() {\r\n    if (!YearRepository.hasYearInRepository(SelectedDate.getFullYear())) {\r\n      YearRepository.createNewYear(SelectedDate);\r\n    }\r\n    this.#resetCalendarDates();\r\n    this.#printCalendarDates();\r\n  }\r\n\r\n  static #resetCalendarDates() {\r\n    const totalCalendarCells = $allDatesInCalendar.length;\r\n    for (let i = 0; i < totalCalendarCells; i++) {\r\n      $allDatesInCalendar[i].textContent = \"\";\r\n      $allDatesInCalendar[i].className = \"\";\r\n      $allDatesInCalendar[i].removeEventListener(\r\n        \"click\",\r\n        this.#dateEventListenerRepository[i]\r\n      );\r\n    }\r\n  }\r\n\r\n  static #printCalendarDates() {\r\n    const thisYear = YearRepository.getYear(SelectedDate.getDateObject());\r\n    const thisMonth = thisYear.getMonth(SelectedDate.getDateObject());\r\n    let dayOfFirstDate = thisMonth.getDayOfFirstDate();\r\n    let lastDate = thisMonth.getLastDate();\r\n    for (\r\n      let i = 1, indexForDate = dayOfFirstDate;\r\n      i <= lastDate;\r\n      i++, indexForDate++\r\n    ) {\r\n      const $dateElement = $allDatesInCalendar[indexForDate];\r\n      const dateOfCalendarInstance = thisMonth.getDateOfCalendarByNumber(i);\r\n      $dateElement.textContent = i;\r\n      $dateElement.classList.add(\"date-inside\");\r\n      if (Now.isDateToday(dateOfCalendarInstance.getDateObject())) {\r\n        $dateElement.classList.add(\"isToday\");\r\n      } else {\r\n        $dateElement.classList.add(\"isNotToday\");\r\n      }\r\n      const clickCallBack = handleDateClick(\r\n        dateOfCalendarInstance,\r\n        $dateElement\r\n      );\r\n      $dateElement.addEventListener(\"click\", clickCallBack);\r\n\r\n      CalendarViewer.#createAndAddNotificationOnDate(\r\n        dateOfCalendarInstance,\r\n        $dateElement\r\n      );\r\n\r\n      this.#dateEventListenerRepository[indexForDate] = clickCallBack; // 이벤트 리스너 지우기 위해 따로 저장\r\n    }\r\n  }\r\n\r\n  static #createAndAddNotificationOnDate(dateOfCalendarInstance, $dateElement) {\r\n    const taskLength = dateOfCalendarInstance.getTaskLength();\r\n    if (taskLength > 0) {\r\n      const $notification = document.createElement(\"div\");\r\n      $notification.classList.add(\"task-notification\");\r\n      $notification.textContent = taskLength;\r\n      $dateElement.appendChild($notification);\r\n    }\r\n  }\r\n}\r\n","import Board from \"../board/Board\";\r\nimport Status from \"../board/Status\";\r\nimport Task from \"../board/Task\";\r\n\r\nexport default class DateOfCalendar {\r\n  #monthBelongTo;\r\n  #yearBelongTo;\r\n  #number;\r\n  #monthNumber;\r\n  #yearNumber;\r\n  #taskRepository = [];\r\n\r\n  constructor(dateNumber, monthObject, yearObject) {\r\n    this.#monthBelongTo = monthObject;\r\n    this.#yearBelongTo = yearObject;\r\n    this.#number = dateNumber;\r\n    this.#yearNumber = yearObject.getNumber();\r\n    this.#monthNumber = monthObject.getNumber();\r\n  }\r\n\r\n  getDateNumber() {\r\n    return this.#number;\r\n  }\r\n\r\n  getDateObject() {\r\n    return new Date(this.#yearNumber, this.#monthNumber, this.#number);\r\n  }\r\n\r\n  getAllTasks() {\r\n    this.sortTasks();\r\n    return this.#taskRepository;\r\n  }\r\n\r\n  sortTasks() {\r\n    this.#taskRepository.sort((task1, task2) => {\r\n      const statusList = Status.getRepository();\r\n      const index1 = statusList.indexOf(task1.getStatus().getText());\r\n      const index2 = statusList.indexOf(task2.getStatus().getText());\r\n      return index1 - index2;\r\n    });\r\n  }\r\n\r\n  addTask(content) {\r\n    const newTask = new Task(content, this);\r\n    this.#taskRepository.push(newTask);\r\n  }\r\n\r\n  deleteTask(task) {\r\n    const taskIndex = this.#taskRepository.indexOf(task);\r\n    this.#taskRepository.splice(taskIndex, 1);\r\n  }\r\n\r\n  deleteAllTasks() {\r\n    this.#taskRepository = [];\r\n  }\r\n\r\n  getTaskLength() {\r\n    return this.#taskRepository.length;\r\n  }\r\n\r\n  handleClicked() {\r\n    if (!Board.getVisibility()) {\r\n      Board.display(this);\r\n      return;\r\n    }\r\n    if (Board.isDateSameWithPreviousDate(this)) {\r\n      Board.hide();\r\n      return;\r\n    }\r\n    Board.display(this);\r\n  }\r\n}\r\n","import DateOfCalendar from \"./DateOfCalendar\";\r\n\r\nexport default class Month {\r\n  static #NAMES = [\r\n    \"JAN\",\r\n    \"FEB\",\r\n    \"MAR\",\r\n    \"APR\",\r\n    \"MAY\",\r\n    \"JUN\",\r\n    \"JUL\",\r\n    \"AUG\",\r\n    \"SEP\",\r\n    \"OCT\",\r\n    \"NOV\",\r\n    \"DEC\",\r\n  ];\r\n\r\n  #dateRepository = [];\r\n  #yearNumber;\r\n  #yearBelongTo;\r\n  #number;\r\n  #monthName;\r\n  #dayOfFirstDate; // 첫 날의 요일\r\n  #lastDate;\r\n\r\n  constructor(yearObject, monthNumber) {\r\n    this.#yearBelongTo = yearObject;\r\n    this.#yearNumber = yearObject.getNumber();\r\n    this.#number = monthNumber;\r\n    this.#monthName = Month.#NAMES[this.#number];\r\n    this.#dayOfFirstDate = new Date(this.#yearNumber, monthNumber, 1).getDay();\r\n    this.#lastDate = new Date(this.#yearNumber, monthNumber + 1, 0).getDate();\r\n    this.#addDatesToRepository();\r\n  }\r\n\r\n  #addDatesToRepository() {\r\n    for (let i = 1; i <= this.#lastDate; i++) {\r\n      const newDate = new DateOfCalendar(i, this, this.#yearBelongTo);\r\n      this.#dateRepository.push(newDate);\r\n    }\r\n  }\r\n\r\n  getDayOfFirstDate() {\r\n    return this.#dayOfFirstDate;\r\n  }\r\n\r\n  getLastDate() {\r\n    return this.#lastDate;\r\n  }\r\n\r\n  getNumber() {\r\n    return this.#number;\r\n  }\r\n\r\n  getYearNumber() {\r\n    return this.#yearNumber;\r\n  }\r\n\r\n  getDateOfCalendarByNumber(dateNumber) {\r\n    return this.#dateRepository.find((dateOfCalendar) => {\r\n      return dateOfCalendar.getDateNumber() === dateNumber;\r\n    });\r\n  }\r\n\r\n  static getNames() {\r\n    return this.#NAMES;\r\n  }\r\n}\r\n","export default class Now {\r\n  static #nowObject = new Date();\r\n\r\n  static getDateObject() {\r\n    return this.#nowObject;\r\n  }\r\n  static isDateToday(dateObject) {\r\n    return (\r\n      this.#nowObject.getDate() === dateObject.getDate() &&\r\n      this.#nowObject.getMonth() === dateObject.getMonth() &&\r\n      this.#nowObject.getFullYear() === dateObject.getFullYear()\r\n    );\r\n  }\r\n}\r\n","export default class SelectedDate {\r\n  static #date = new Date();\r\n\r\n  static getDateObject() {\r\n    return new Date(SelectedDate.#date.valueOf());\r\n  }\r\n\r\n  static setMonthOfDateObject(newMonthNumber) {\r\n    SelectedDate.#date.setMonth(newMonthNumber);\r\n  }\r\n\r\n  static setDateOfDateObject(newDateNumber) {\r\n    SelectedDate.#date.setDate(newDateNumber);\r\n  }\r\n\r\n  static getMonth() {\r\n    return SelectedDate.#date.getMonth();\r\n  }\r\n\r\n  static getDay() {\r\n    return SelectedDate.#date.getDay();\r\n  }\r\n\r\n  static getDateNumber() {\r\n    return SelectedDate.#date.getDate();\r\n  }\r\n\r\n  static getFullYear() {\r\n    return SelectedDate.#date.getFullYear();\r\n  }\r\n}\r\n","import Month from \"./Month\";\r\nexport default class Year {\r\n  #number;\r\n  #monthRepository = [];\r\n  #TOTAL_MONTH_LENGTH = 12;\r\n\r\n  constructor(yearNumber) {\r\n    this.#number = yearNumber;\r\n    this.addMonthsToRepository();\r\n  }\r\n\r\n  addMonthsToRepository() {\r\n    for (let i = 0; i < this.#TOTAL_MONTH_LENGTH; i++) {\r\n      const newMonth = new Month(this, i);\r\n      this.#monthRepository.push(newMonth);\r\n    }\r\n  }\r\n\r\n  getMonth(dateObject) {\r\n    return this.#monthRepository.find((month) => {\r\n      return (\r\n        month.getYearNumber() === dateObject.getFullYear() &&\r\n        month.getNumber() === dateObject.getMonth()\r\n      );\r\n    });\r\n  }\r\n\r\n  getNumber() {\r\n    return this.#number;\r\n  }\r\n}\r\n","import Year from \"./Year\";\r\n\r\nexport default class YearRepository {\r\n  static #years = [];\r\n\r\n  static createNewYear(dateObject) {\r\n    const newYear = new Year(dateObject.getFullYear());\r\n    YearRepository.#addYearToRepository(newYear);\r\n  }\r\n\r\n  static #addYearToRepository(newYear) {\r\n    YearRepository.#years.push(newYear);\r\n  }\r\n\r\n  static hasYearInRepository(yearNumber) {\r\n    return (\r\n      YearRepository.#years.filter((yearObject) => {\r\n        return yearObject.getNumber() === yearNumber;\r\n      }).length !== 0\r\n    );\r\n  }\r\n\r\n  static getYear(dateObject) {\r\n    return YearRepository.#years.find((yearObject) => {\r\n      return yearObject.getNumber() === dateObject.getFullYear();\r\n    });\r\n  }\r\n}\r\n","import CalendarController from \"./CalendarController\";\r\nimport CalendarViewer from \"./CalendarViewer\";\r\nimport Now from \"./Now\";\r\nimport SelectedDate from \"./SelectedDate\";\r\nimport { $differenceWithClickedDate } from \"../element\";\r\nimport {\r\n  handleBoardViewWhenDateClick,\r\n  removeBoard,\r\n} from \"../board/boardEventHandler\";\r\n\r\nexport const handleMoveMonthButton = (event) => {\r\n  const clickedButton = event.target.classList[1];\r\n\r\n  removeBoard();\r\n\r\n  if (clickedButton === \"previous-month-button\") {\r\n    SelectedDate.setMonthOfDateObject(SelectedDate.getMonth() - 1);\r\n  }\r\n  if (clickedButton === \"next-month-button\") {\r\n    SelectedDate.setMonthOfDateObject(SelectedDate.getMonth() + 1);\r\n  }\r\n  SelectedDate.setDateOfDateObject(1);\r\n  $differenceWithClickedDate.textContent = \"\";\r\n  CalendarViewer.display();\r\n};\r\n\r\nexport let previousClickedDateObject;\r\nexport const handleDateClick = (dateOfCalendar, $dateElement) => {\r\n  return () => {\r\n    previousClickedDateObject = SelectedDate.getDateObject();\r\n    SelectedDate.setDateOfDateObject(dateOfCalendar.getDateNumber());\r\n\r\n    handleTodayClick(dateOfCalendar);\r\n    handleClickDifferentDate(dateOfCalendar, $dateElement);\r\n    handleBoardViewWhenDateClick(dateOfCalendar);\r\n  };\r\n};\r\n\r\nconst handleTodayClick = (dateOfCalendar) => {\r\n  if (Now.isDateToday(dateOfCalendar.getDateObject())) {\r\n    CalendarViewer.display();\r\n    $differenceWithClickedDate.textContent = \"Today\";\r\n    return;\r\n  }\r\n};\r\n\r\nconst handleClickDifferentDate = (dateOfCalendar, $dateElement) => {\r\n  const now = Now.getDateObject();\r\n  const ONE_DAY = 1000 * 60 * 60 * 24;\r\n  const $dateDifferenceFromNow = Math.ceil(\r\n    (dateOfCalendar.getDateObject() - now) / ONE_DAY\r\n  );\r\n\r\n  CalendarViewer.display();\r\n\r\n  if ($dateDifferenceFromNow) {\r\n    displayClickedResult($dateElement, $dateDifferenceFromNow);\r\n  }\r\n};\r\n\r\nconst displayClickedResult = ($dateElement, $dateDifferenceFromNow) => {\r\n  $dateElement.classList.add(\"dateClicked\");\r\n\r\n  $differenceWithClickedDate.textContent = `${\r\n    Math.abs($dateDifferenceFromNow) < 2\r\n      ? `${$dateDifferenceFromNow} day`\r\n      : `${$dateDifferenceFromNow} days`\r\n  } difference from Today`;\r\n};\r\n","export const DAYS = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n","export const $selectedDateText = document.getElementById(\"jsSelectedDateText\");\r\nexport const $selectedMonthText = document.getElementById(\r\n  \"jsSelectedMonthText\"\r\n);\r\nexport const $selectedDayText = document.getElementById(\"jsSelectedDayText\");\r\nexport const $selectedYearText = document.getElementById(\"jsSelectedYearText\");\r\nexport const $allDatesInCalendar = document.querySelectorAll(\r\n  \"#jsCalendarTable > tbody td\"\r\n);\r\nexport const $previousMonthButton = document.getElementById(\r\n  \"jsPreviousMonthButton\"\r\n);\r\nexport const $nextMonthButton = document.getElementById(\"jsNextMonthButton\");\r\nexport const $differenceWithClickedDate = document.getElementById(\r\n  \"jsDifferenceWithClickedDate\"\r\n);\r\nexport const $boardElement = document.getElementById(\"jsBoard\");\r\nexport const $boardDateText = document.getElementById(\"jsBoardDateText\");\r\nexport const $boardButtonDeleteAll = document.getElementById(\r\n  \"jsBoardButtonDeleteAll\"\r\n);\r\nexport const $boardButtonAdd = document.getElementById(\"jsBoardButtonAdd\");\r\nexport const $boardFormContainer = document.getElementById(\r\n  \"jsBoardFormContainer\"\r\n);\r\n\r\nexport const $taskContentTextInput = document.getElementById(\r\n  \"jsTaskContentTextInput\"\r\n);\r\nexport const $taskSubmissionOK = document.getElementById(\"jsTaskSubmissionOK\");\r\nexport const $taskSubmissionCancel = document.getElementById(\r\n  \"jsTaskSubmissionCancel\"\r\n);\r\nexport const $taskList = document.getElementById(\"jsTaskList\");\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import CalendarController from \"./calendar/CalendarController\";\r\n\r\nnew CalendarController();\r\n"],"sourceRoot":""}