{"version":3,"sources":["webpack://prep-assignment-calendar/./src/js/boardEventHandler.js","webpack://prep-assignment-calendar/./src/js/board/Status.js","webpack://prep-assignment-calendar/./src/js/board/Task.js","webpack://prep-assignment-calendar/./src/js/calendarEventHandler.js","webpack://prep-assignment-calendar/./src/js/calendar/CalendarController.js","webpack://prep-assignment-calendar/./src/js/calendar/CalendarViewer.js","webpack://prep-assignment-calendar/./src/js/calendar/DateOfCalendar.js","webpack://prep-assignment-calendar/./src/js/calendar/Month.js","webpack://prep-assignment-calendar/./src/js/calendar/Now.js","webpack://prep-assignment-calendar/./src/js/calendar/SelectedDate.js","webpack://prep-assignment-calendar/./src/js/calendar/Year.js","webpack://prep-assignment-calendar/./src/js/calendar/YearRepository.js","webpack://prep-assignment-calendar/./src/js/calendar/day.js","webpack://prep-assignment-calendar/./src/js/element.js","webpack://prep-assignment-calendar/webpack/bootstrap","webpack://prep-assignment-calendar/webpack/runtime/define property getters","webpack://prep-assignment-calendar/webpack/runtime/hasOwnProperty shorthand","webpack://prep-assignment-calendar/webpack/runtime/make namespace object","webpack://prep-assignment-calendar/./src/js/index.js"],"names":["clickedDateOfCalendar","isBoardVisible","handleBoardViewWhenDateClick","dateOfCalendar","removePreviousBoardButtonEventListner","displayBoardDateText","handleBoardButtons","handleDateClickWhenBoardVisible","handleDateClickWhenBoardInvisible","boardButtonAdd","boardButtonAddCallback","boardButtonDeleteAll","boardButtonDeleteAllCallback","clickedDate","getDate","boardDateText","getMonth","handleBoardButtonAdd","handleBoardButtonDeleteAll","displayTaskSubmissionForm","clickTaskSubmissionOKCallBack","clickTaskSubmissionCancelCallBack","displayBoardFormContainerElement","handleClickTaskSubmissionOK","handleClickTaskSubmissionCancel","taskSubmissionOK","taskSubmissionCancel","boardFormContainer","addTask","taskContentTextInput","removeTaskSubmissionForm","displayBoard","clearInputTextArea","removeTaskList","removeBoardFormContainerElement","deleteAllTasks","sameDateClicked","removeBoard","taskList","getNumber","previousClickedDateObject","removeBoardElement","boardElement","displayBoardElement","displayTasksOnBoard","tasks","getAllTasks","forEach","createAndAddTaskElement","taskElement","taskStatus","taskContent","taskButtonContainer","updateButton","deleteButton","task","createTaskElements","addClassNameToTaskElements","addTextContentToTaskElements","combineTaskElements","colorTaskSatus","getStatus","addEventListenerToTaskButtons","document","createElement","classList","add","textContent","getText","getContent","appendChild","status","style","backgroundColor","Status","indexOf","addEventListener","handleClickUpdateTaskButton","handleClickModifyingContent","handleClickDeleteTaskButton","updateStatus","itsTaskElement","itsTaskContent","innerHTML","inputElementForModifying","value","handleEnterModifyingInput","bind","insertBefore","event","keyCode","newTextContent","updateTextContent","getAssignedDate","deleteTask","newStatusIndex","length","console","log","Task","content","assignedDate","Date","update","handleMoveMonthButton","clickedButton","target","SelectedDate","differenceWithClickedDate","CalendarViewer","handleDateClick","dateElement","handleTodayClick","handleClickDifferentDate","CalendarController","now","Now","ONE_DAY","dateDifferenceFromNow","Math","ceil","displayClickedResult","color","fontWeight","abs","dateObject","getFullYear","previousMonthButton","nextMonthButton","dateOfCalendarInstance","taskLength","getTaskLength","notification","thisYear","YearRepository","thisMonth","dayOfFirstDate","getDayOfFirstDate","lastDate","getLastDate","i","indexForDate","allDatesInCalendar","getDateByNumber","clickCallBack","totalCalendarCells","className","removeEventListener","selectedDayText","DAYS","selectedDateText","selectedMonthText","Month","selectedYearText","getElementById","getDay","header","querySelectorAll","th","DateOfCalendar","dateNumber","monthObject","yearObject","sortTasks","sort","task1","task2","statusList","index1","index2","newTask","push","taskIndex","splice","monthNumber","find","newDate","valueOf","newMonthNumber","setMonth","newDateNumber","setDate","Year","yearNumber","addMonthsToRepository","newMonth","month","getYearNumber","newYear","filter"],"mappings":"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","file":"bundle.js","sourcesContent":["import {\r\n  boardElement,\r\n  boardDateText,\r\n  boardButtonAdd,\r\n  boardButtonDeleteAll,\r\n  boardFormContainer,\r\n  taskContentTextInput,\r\n  taskSubmissionOK,\r\n  taskSubmissionCancel,\r\n  taskList,\r\n} from \"./element\";\r\n\r\nimport { previousClickedDateObject } from \"./calendarEventHandler\";\r\nimport Status from \"./board/Status\";\r\n\r\nlet clickedDateOfCalendar;\r\nlet isBoardVisible = false;\r\nexport const handleBoardViewWhenDateClick = (dateOfCalendar) => {\r\n  clickedDateOfCalendar = dateOfCalendar;\r\n  removePreviousBoardButtonEventListner();\r\n\r\n  displayBoardDateText();\r\n  handleBoardButtons();\r\n\r\n  if (isBoardVisible) {\r\n    handleDateClickWhenBoardVisible();\r\n    return;\r\n  }\r\n  handleDateClickWhenBoardInvisible();\r\n};\r\n\r\nconst removePreviousBoardButtonEventListner = () => {\r\n  boardButtonAdd.removeEventListener(\"click\", boardButtonAddCallback);\r\n  boardButtonDeleteAll.removeEventListener(\r\n    \"click\",\r\n    boardButtonDeleteAllCallback\r\n  );\r\n};\r\n\r\nconst displayBoardDateText = () => {\r\n  const clickedDate = clickedDateOfCalendar.getDate();\r\n  boardDateText.textContent = `TO DO LIST${\r\n    clickedDate.getMonth() + 1\r\n  }.${clickedDate.getDate()}`;\r\n};\r\n\r\nlet boardButtonAddCallback;\r\nlet boardButtonDeleteAllCallback;\r\nconst handleBoardButtons = () => {\r\n  boardButtonAddCallback = handleBoardButtonAdd();\r\n  boardButtonDeleteAllCallback = handleBoardButtonDeleteAll();\r\n\r\n  boardButtonAdd.addEventListener(\"click\", boardButtonAddCallback);\r\n  boardButtonDeleteAll.addEventListener(\"click\", boardButtonDeleteAllCallback);\r\n};\r\nconst handleBoardButtonAdd = () => {\r\n  return () => {\r\n    displayTaskSubmissionForm();\r\n  };\r\n};\r\n\r\nlet clickTaskSubmissionOKCallBack;\r\nlet clickTaskSubmissionCancelCallBack;\r\nconst displayTaskSubmissionForm = () => {\r\n  displayBoardFormContainerElement();\r\n\r\n  clickTaskSubmissionOKCallBack = handleClickTaskSubmissionOK();\r\n  clickTaskSubmissionCancelCallBack = handleClickTaskSubmissionCancel();\r\n  taskSubmissionOK.addEventListener(\"click\", clickTaskSubmissionOKCallBack);\r\n  taskSubmissionCancel.addEventListener(\r\n    \"click\",\r\n    clickTaskSubmissionCancelCallBack\r\n  );\r\n};\r\n\r\nconst displayBoardFormContainerElement = () => {\r\n  boardFormContainer.classList.remove(\"board__form-container--invisible\");\r\n  boardFormContainer.classList.add(\"board__form-container--visible\");\r\n};\r\n\r\nconst handleClickTaskSubmissionOK = () => {\r\n  return () => {\r\n    clickedDateOfCalendar.addTask(taskContentTextInput.value);\r\n    removeTaskSubmissionForm();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst removeTaskSubmissionForm = () => {\r\n  taskSubmissionOK.removeEventListener(\"click\", clickTaskSubmissionOKCallBack);\r\n  taskSubmissionCancel.removeEventListener(\r\n    \"click\",\r\n    clickTaskSubmissionCancelCallBack\r\n  );\r\n  clearInputTextArea();\r\n  removeTaskList();\r\n  removeBoardFormContainerElement();\r\n};\r\n\r\nconst handleClickTaskSubmissionCancel = () => {\r\n  return () => {\r\n    removeTaskSubmissionForm();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst clearInputTextArea = () => {\r\n  taskContentTextInput.value = \"\";\r\n};\r\n\r\nconst removeBoardFormContainerElement = () => {\r\n  boardFormContainer.classList.remove(\"board__form-container--visible\");\r\n  boardFormContainer.classList.add(\"board__form-container--invisible\");\r\n};\r\n\r\nconst handleBoardButtonDeleteAll = () => {\r\n  return () => {\r\n    clickedDateOfCalendar.deleteAllTasks();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst handleDateClickWhenBoardVisible = () => {\r\n  if (sameDateClicked()) {\r\n    removeBoard();\r\n    return;\r\n  }\r\n  displayBoard();\r\n};\r\n\r\nconst removeTaskList = () => {\r\n  taskList.innerHTML = \"\";\r\n};\r\n\r\nconst sameDateClicked = () => {\r\n  return (\r\n    clickedDateOfCalendar.getNumber() === previousClickedDateObject.getDate()\r\n  );\r\n};\r\n\r\nconst handleDateClickWhenBoardInvisible = () => {\r\n  displayBoard();\r\n};\r\n\r\nexport const removeBoard = () => {\r\n  removeBoardElement();\r\n  removeTaskList();\r\n  clearInputTextArea();\r\n};\r\n\r\nconst removeBoardElement = () => {\r\n  boardElement.classList.remove(\"board--visible\");\r\n  boardElement.classList.add(\"board--invisible\");\r\n  isBoardVisible = false;\r\n};\r\n\r\nconst displayBoard = () => {\r\n  displayBoardElement();\r\n  removeTaskList();\r\n  clearInputTextArea();\r\n  displayTasksOnBoard();\r\n};\r\n\r\nconst displayBoardElement = () => {\r\n  boardElement.classList.add(\"board--visible\");\r\n  boardElement.classList.remove(\"board--invisible\");\r\n  isBoardVisible = true;\r\n};\r\n\r\nconst displayTasksOnBoard = () => {\r\n  const tasks = clickedDateOfCalendar.getAllTasks();\r\n  tasks.forEach(createAndAddTaskElement);\r\n};\r\n\r\nlet taskElement;\r\nlet taskStatus;\r\nlet taskContent;\r\nlet taskButtonContainer;\r\nlet updateButton;\r\nlet deleteButton;\r\nconst createAndAddTaskElement = (task) => {\r\n  createTaskElements();\r\n  addClassNameToTaskElements();\r\n  addTextContentToTaskElements(task);\r\n  combineTaskElements();\r\n  colorTaskSatus(task.getStatus()); // status 엘리먼트가 만들어지고 나서 수행\r\n  addEventListenerToTaskButtons(task);\r\n};\r\n\r\nconst createTaskElements = () => {\r\n  taskElement = document.createElement(\"li\");\r\n  taskStatus = document.createElement(\"span\");\r\n  taskContent = document.createElement(\"span\");\r\n  taskButtonContainer = document.createElement(\"span\");\r\n  updateButton = document.createElement(\"button\");\r\n  deleteButton = document.createElement(\"button\");\r\n};\r\n\r\nconst addClassNameToTaskElements = () => {\r\n  taskElement.classList.add(\"task\");\r\n  taskStatus.classList.add(\"task__status\");\r\n  taskContent.classList.add(\"task__content\");\r\n  taskButtonContainer.classList.add(\"task__button-container\");\r\n  updateButton.classList.add(\"task__button\");\r\n  updateButton.classList.add(\"task__button--update\");\r\n  deleteButton.classList.add(\"task__button\");\r\n  deleteButton.classList.add(\"task__button--delete\");\r\n};\r\n\r\nconst addTextContentToTaskElements = (task) => {\r\n  taskStatus.textContent = task.getStatus().getText();\r\n  taskContent.textContent = task.getContent();\r\n  updateButton.textContent = \"✅\";\r\n  deleteButton.textContent = \"⛔\";\r\n};\r\n\r\nconst combineTaskElements = () => {\r\n  taskButtonContainer.appendChild(updateButton);\r\n  taskButtonContainer.appendChild(deleteButton);\r\n  taskElement.appendChild(taskStatus);\r\n  taskElement.appendChild(taskContent);\r\n  taskElement.appendChild(taskButtonContainer);\r\n  taskList.appendChild(taskElement);\r\n};\r\n\r\nconst colorTaskSatus = (status) => {\r\n  taskStatus.style.backgroundColor = Status.getColors()[\r\n    Status.getRepository().indexOf(status.getText())\r\n  ];\r\n};\r\n\r\nconst addEventListenerToTaskButtons = (task) => {\r\n  taskStatus.addEventListener(\"click\", handleClickUpdateTaskButton(task));\r\n  taskContent.addEventListener(\r\n    \"click\",\r\n    handleClickModifyingContent(\r\n      taskElement,\r\n      taskContent,\r\n      taskButtonContainer,\r\n      task\r\n    )\r\n  );\r\n  updateButton.addEventListener(\"click\", handleClickUpdateTaskButton(task));\r\n  deleteButton.addEventListener(\"click\", handleClickDeleteTaskButton(task));\r\n};\r\n\r\nconst handleClickUpdateTaskButton = (task) => {\r\n  return () => {\r\n    task.updateStatus();\r\n    displayBoard();\r\n  };\r\n};\r\n\r\nconst handleClickModifyingContent = (\r\n  itsTaskElement,\r\n  itsTaskContent,\r\n  taskButtonContainer,\r\n  task\r\n) => {\r\n  return () => {\r\n    itsTaskContent.innerHTML = \"\";\r\n    const inputElementForModifying = document.createElement(\"input\");\r\n    inputElementForModifying.value = task.getContent();\r\n    inputElementForModifying.addEventListener(\r\n      \"keydown\",\r\n      handleEnterModifyingInput.bind(null, task, inputElementForModifying)\r\n    );\r\n    itsTaskElement.insertBefore(inputElementForModifying, taskButtonContainer);\r\n  };\r\n};\r\n\r\nconst handleEnterModifyingInput = (task, inputElementForModifying, event) => {\r\n  if (event.keyCode === 13) {\r\n    const newTextContent = inputElementForModifying.value;\r\n    task.updateTextContent(newTextContent);\r\n    displayBoard();\r\n  }\r\n};\r\n\r\nconst handleClickDeleteTaskButton = (task) => {\r\n  return () => {\r\n    task.getAssignedDate().deleteTask(task);\r\n    displayBoard();\r\n  };\r\n};\r\n","export default class Status {\r\n  // 초기 상태 정보 목록\r\n  // 커스텀 상태 정보\r\n  #statusName;\r\n  static #TODO = \"TODO\";\r\n  static #DOING = \"DOING\";\r\n  static #DONE = \"DONE\";\r\n  static #statusRepository = [this.#TODO, this.#DOING, this.#DONE];\r\n  static #statusColor = [\"white\", \"yellowgreen\", \"red\"];\r\n  #cannotUpdateMessage = `현재 상태가 ${\r\n    Status.#DONE\r\n  } 입니다. 더 이상 업데이트 할 수 없습니다.`;\r\n\r\n  constructor() {\r\n    this.#statusName = Status.#statusRepository[0];\r\n  }\r\n\r\n  getText() {\r\n    return this.#statusName;\r\n  }\r\n\r\n  update() {\r\n    const newStatusIndex =\r\n      Status.#statusRepository.indexOf(this.#statusName) + 1;\r\n    if (newStatusIndex === Status.#statusRepository.length) {\r\n      console.log(this.#cannotUpdateMessage);\r\n      return;\r\n    }\r\n    this.#statusName = Status.#statusRepository[newStatusIndex];\r\n  }\r\n\r\n  static getRepository() {\r\n    return Status.#statusRepository;\r\n  }\r\n  static getColors() {\r\n    return Status.#statusColor;\r\n  }\r\n}\r\n","import Status from \"./Status\";\r\n\r\nexport default class Task {\r\n  #createdTime;\r\n  #content;\r\n  #status;\r\n  #assignedDate;\r\n\r\n  constructor(content, assignedDate) {\r\n    this.#createdTime = new Date();\r\n    this.#content = content;\r\n    this.#status = new Status();\r\n    this.#assignedDate = assignedDate;\r\n  }\r\n\r\n  getContent() {\r\n    return this.#content;\r\n  }\r\n\r\n  getStatus() {\r\n    return this.#status;\r\n  }\r\n\r\n  updateStatus() {\r\n    this.#status.update();\r\n  }\r\n\r\n  getAssignedDate() {\r\n    return this.#assignedDate;\r\n  }\r\n  updateTextContent(newTextContent) {\r\n    this.#content = newTextContent;\r\n  }\r\n}\r\n","import CalendarController from \"./calendar/CalendarController\";\r\nimport CalendarViewer from \"./calendar/CalendarViewer\";\r\nimport Now from \"./calendar/Now\";\r\nimport SelectedDate from \"./calendar/SelectedDate\";\r\nimport { differenceWithClickedDate } from \"./element\";\r\nimport { handleBoardViewWhenDateClick, removeBoard } from \"./boardEventHandler\";\r\n\r\nexport const handleMoveMonthButton = (event) => {\r\n  const clickedButton = event.target.classList[1];\r\n\r\n  removeBoard();\r\n\r\n  if (clickedButton === \"previous-month-button\") {\r\n    SelectedDate.setMonthOfDateObject(SelectedDate.getMonth() - 1);\r\n  }\r\n  if (clickedButton === \"next-month-button\") {\r\n    SelectedDate.setMonthOfDateObject(SelectedDate.getMonth() + 1);\r\n  }\r\n  SelectedDate.setDateOfDateObject(1);\r\n  differenceWithClickedDate.textContent = \"\";\r\n  CalendarViewer.display();\r\n};\r\n\r\nexport let previousClickedDateObject;\r\nexport const handleDateClick = (dateOfCalendar, dateElement) => {\r\n  return () => {\r\n    previousClickedDateObject = SelectedDate.getDateObject();\r\n    SelectedDate.setDateOfDateObject(dateOfCalendar.getNumber());\r\n\r\n    handleTodayClick(dateOfCalendar);\r\n    handleClickDifferentDate(dateOfCalendar, dateElement);\r\n    handleBoardViewWhenDateClick(dateOfCalendar);\r\n  };\r\n};\r\n\r\nconst handleTodayClick = (dateOfCalendar) => {\r\n  if (CalendarController.isDateToday(dateOfCalendar.getDate())) {\r\n    CalendarViewer.display();\r\n    differenceWithClickedDate.textContent = \"Today\";\r\n    return;\r\n  }\r\n};\r\n\r\nconst handleClickDifferentDate = (dateOfCalendar, dateElement) => {\r\n  const now = Now.getDate();\r\n  const ONE_DAY = 1000 * 60 * 60 * 24;\r\n  const dateDifferenceFromNow = Math.ceil(\r\n    (dateOfCalendar.getDate() - now) / ONE_DAY\r\n  );\r\n\r\n  CalendarViewer.display();\r\n\r\n  if (dateDifferenceFromNow) {\r\n    displayClickedResult(dateElement, dateDifferenceFromNow);\r\n  }\r\n};\r\n\r\nconst displayClickedResult = (dateElement, dateDifferenceFromNow) => {\r\n  dateElement.style.color = \"blue\";\r\n  dateElement.style.fontWeight = 1000;\r\n\r\n  differenceWithClickedDate.textContent = `${\r\n    Math.abs(dateDifferenceFromNow) < 2\r\n      ? `${dateDifferenceFromNow} day`\r\n      : `${dateDifferenceFromNow} days`\r\n  } difference from Today`;\r\n};\r\n","import { handleMoveMonthButton } from \"../calendarEventHandler\";\r\nimport CalendarViewer from \"./CalendarViewer\";\r\nimport Now from \"./Now\";\r\nimport { previousMonthButton, nextMonthButton } from \"../element\";\r\n\r\nexport default class CalendarController {\r\n  constructor() {\r\n    CalendarViewer.display();\r\n    this.#initialAddingEventListner();\r\n  }\r\n\r\n  #initialAddingEventListner() {\r\n    previousMonthButton.addEventListener(\"click\", handleMoveMonthButton);\r\n    nextMonthButton.addEventListener(\"click\", handleMoveMonthButton);\r\n  }\r\n\r\n  static isDateToday(dateObject) {\r\n    const now = Now.getDate();\r\n    return (\r\n      dateObject.getDate() === now.getDate() &&\r\n      dateObject.getMonth() === now.getMonth() &&\r\n      dateObject.getFullYear() === now.getFullYear()\r\n    );\r\n  }\r\n}\r\n","import { DAYS } from \"./day\";\r\nimport Month from \"./Month\";\r\nimport SelectedDate from \"./SelectedDate\";\r\nimport YearRepository from \"./YearRepository\";\r\nimport { handleDateClick } from \"../calendarEventHandler\";\r\nimport CalendarController from \"./CalendarController\";\r\nimport {\r\n  selectedDateText,\r\n  selectedMonthText,\r\n  selectedDayText,\r\n  selectedYearText,\r\n  allDatesInCalendar,\r\n} from \"../element\";\r\n\r\nexport default class CalendarViewer {\r\n  static #dateEventListenerRepository = {};\r\n\r\n  static display() {\r\n    CalendarViewer.#displayHeader();\r\n    CalendarViewer.#displayToday();\r\n\r\n    CalendarViewer.#displaySelectedCalendar();\r\n  }\r\n\r\n  static #displayHeader() {\r\n    const header = document.querySelectorAll(\"table tbody tr th\");\r\n    let i = 0;\r\n    header.forEach((th) => {\r\n      th.textContent = DAYS[i++];\r\n    });\r\n  }\r\n  static #displayToday() {\r\n    const now = new Date();\r\n    document.getElementById(\"jsTodayDay\").textContent = DAYS[now.getDay()];\r\n    document.getElementById(\"jsTodayDate\").textContent = now.getDate();\r\n    document.getElementById(\"jsTodayMonth\").textContent = Month.getNames()[\r\n      now.getMonth()\r\n    ];\r\n    document.getElementById(\"jsTodayYear\").textContent = now.getFullYear();\r\n  }\r\n\r\n  static #displaySelectedCalendar() {\r\n    this.#displaySelectedDateText();\r\n    this.#displaySelectedDates();\r\n  }\r\n\r\n  static #displaySelectedDateText() {\r\n    selectedDayText.textContent = DAYS[SelectedDate.getDay()];\r\n    selectedDateText.textContent = SelectedDate.getDate();\r\n    selectedMonthText.textContent = Month.getNames()[SelectedDate.getMonth()];\r\n    selectedYearText.textContent = SelectedDate.getFullYear();\r\n  }\r\n\r\n  static #displaySelectedDates() {\r\n    if (!YearRepository.hasYearInRepository(SelectedDate.getFullYear())) {\r\n      YearRepository.createNewYear(SelectedDate);\r\n    }\r\n    this.#resetCalendarDates();\r\n    this.#printCalendarDates();\r\n  }\r\n\r\n  static #resetCalendarDates() {\r\n    const totalCalendarCells = allDatesInCalendar.length;\r\n    for (let i = 0; i < totalCalendarCells; i++) {\r\n      allDatesInCalendar[i].textContent = \"\";\r\n      allDatesInCalendar[i].style.fontWeight = \"normal\";\r\n      allDatesInCalendar[i].className = \"\";\r\n\r\n      allDatesInCalendar[i].removeEventListener(\r\n        \"click\",\r\n        this.#dateEventListenerRepository[i]\r\n      );\r\n    }\r\n  }\r\n\r\n  static #printCalendarDates() {\r\n    const thisYear = YearRepository.getYear(SelectedDate.getDateObject());\r\n    const thisMonth = thisYear.getMonth(SelectedDate.getDateObject());\r\n    let dayOfFirstDate = thisMonth.getDayOfFirstDate();\r\n    let lastDate = thisMonth.getLastDate();\r\n    for (\r\n      let i = 1, indexForDate = dayOfFirstDate;\r\n      i <= lastDate;\r\n      i++, indexForDate++\r\n    ) {\r\n      const dateElement = allDatesInCalendar[indexForDate];\r\n      const dateOfCalendarInstance = thisMonth.getDateByNumber(i);\r\n      dateElement.textContent = i;\r\n      dateElement.classList.add(\"date-inside\");\r\n      if (CalendarController.isDateToday(dateOfCalendarInstance.getDate())) {\r\n        dateElement.style.color = \"red\";\r\n        dateElement.style.fontWeight = 1000;\r\n      } else {\r\n        dateElement.style.color = \"black\";\r\n      }\r\n      const clickCallBack = handleDateClick(\r\n        dateOfCalendarInstance,\r\n        dateElement\r\n      );\r\n      dateElement.addEventListener(\"click\", clickCallBack);\r\n\r\n      CalendarViewer.#createAndAddNotificationOnDate(\r\n        dateOfCalendarInstance,\r\n        dateElement\r\n      );\r\n\r\n      this.#dateEventListenerRepository[indexForDate] = clickCallBack; // 이벤트 리스너 지우기 위해 따로 저장\r\n    }\r\n  }\r\n\r\n  static #createAndAddNotificationOnDate(dateOfCalendarInstance, dateElement) {\r\n    const taskLength = dateOfCalendarInstance.getTaskLength();\r\n    if (taskLength > 0) {\r\n      const notification = document.createElement(\"div\");\r\n      notification.classList.add(\"task-notification\");\r\n      notification.textContent = taskLength;\r\n      dateElement.appendChild(notification);\r\n    }\r\n  }\r\n}\r\n","import Status from \"../board/Status\";\r\nimport Task from \"../board/Task\";\r\n\r\nexport default class DateOfCalendar {\r\n  #monthBelongTo;\r\n  #yearBelongTo;\r\n  #number;\r\n  #monthNumber;\r\n  #yearNumber;\r\n  #taskRepository = [];\r\n\r\n  constructor(dateNumber, monthObject, yearObject) {\r\n    this.#monthBelongTo = monthObject;\r\n    this.#yearBelongTo = yearObject;\r\n    this.#number = dateNumber;\r\n    this.#yearNumber = yearObject.getNumber();\r\n    this.#monthNumber = monthObject.getNumber();\r\n  }\r\n\r\n  getNumber() {\r\n    return this.#number;\r\n  }\r\n\r\n  getDate() {\r\n    return new Date(this.#yearNumber, this.#monthNumber, this.#number);\r\n  }\r\n\r\n  getAllTasks() {\r\n    this.sortTasks();\r\n    return this.#taskRepository;\r\n  }\r\n\r\n  sortTasks() {\r\n    this.#taskRepository.sort((task1, task2) => {\r\n      const statusList = Status.getRepository();\r\n      const index1 = statusList.indexOf(task1.getStatus().getText());\r\n      const index2 = statusList.indexOf(task2.getStatus().getText());\r\n      return index1 - index2;\r\n    });\r\n  }\r\n\r\n  addTask(content) {\r\n    const newTask = new Task(content, this);\r\n    this.#taskRepository.push(newTask);\r\n  }\r\n\r\n  deleteTask(task) {\r\n    const taskIndex = this.#taskRepository.indexOf(task);\r\n    this.#taskRepository.splice(taskIndex, 1);\r\n  }\r\n\r\n  deleteAllTasks() {\r\n    this.#taskRepository = [];\r\n  }\r\n  getTaskLength() {\r\n    return this.#taskRepository.length;\r\n  }\r\n}\r\n","import DateOfCalendar from \"./DateOfCalendar\";\r\n\r\nexport default class Month {\r\n  static #NAMES = [\r\n    \"JAN\",\r\n    \"FEB\",\r\n    \"MAR\",\r\n    \"APR\",\r\n    \"MAY\",\r\n    \"JUN\",\r\n    \"JUL\",\r\n    \"AUG\",\r\n    \"SEP\",\r\n    \"OCT\",\r\n    \"NOV\",\r\n    \"DEC\",\r\n  ];\r\n\r\n  #dateRepository = [];\r\n  #yearNumber;\r\n  #yearBelongTo;\r\n  #number;\r\n  #monthName;\r\n  #dayOfFirstDate; // 첫 날의 요일\r\n  #lastDate;\r\n\r\n  constructor(yearObject, monthNumber) {\r\n    this.#yearBelongTo = yearObject;\r\n    this.#yearNumber = yearObject.getNumber();\r\n    this.#number = monthNumber;\r\n    this.#monthName = Month.#NAMES[this.#number];\r\n    this.#dayOfFirstDate = new Date(this.#yearNumber, monthNumber, 1).getDay();\r\n    this.#lastDate = new Date(this.#yearNumber, monthNumber + 1, 0).getDate();\r\n    this.#addDatesToRepository();\r\n  }\r\n\r\n  #addDatesToRepository() {\r\n    for (let i = 1; i <= this.#lastDate; i++) {\r\n      const newDate = new DateOfCalendar(i, this, this.#yearBelongTo);\r\n      this.#dateRepository.push(newDate);\r\n    }\r\n  }\r\n\r\n  getDayOfFirstDate() {\r\n    return this.#dayOfFirstDate;\r\n  }\r\n\r\n  getLastDate() {\r\n    return this.#lastDate;\r\n  }\r\n\r\n  getNumber() {\r\n    return this.#number;\r\n  }\r\n\r\n  getYearNumber() {\r\n    return this.#yearNumber;\r\n  }\r\n\r\n  getDateByNumber(dateNumber) {\r\n    return this.#dateRepository.find((dateOfCalendar) => {\r\n      return dateOfCalendar.getNumber() === dateNumber;\r\n    });\r\n  }\r\n\r\n  static getNames() {\r\n    return this.#NAMES;\r\n  }\r\n}\r\n","export default class Now {\r\n  static #nowObject = new Date();\r\n\r\n  static getDate() {\r\n    return this.#nowObject;\r\n  }\r\n}\r\n","export default class SelectedDate {\r\n  static #date = new Date();\r\n\r\n  static getDateObject() {\r\n    return new Date(SelectedDate.#date.valueOf());\r\n  }\r\n\r\n  static setMonthOfDateObject(newMonthNumber) {\r\n    SelectedDate.#date.setMonth(newMonthNumber);\r\n  }\r\n\r\n  static setDateOfDateObject(newDateNumber) {\r\n    SelectedDate.#date.setDate(newDateNumber);\r\n  }\r\n\r\n  static getMonth() {\r\n    return SelectedDate.#date.getMonth();\r\n  }\r\n\r\n  static getDay() {\r\n    return SelectedDate.#date.getDay();\r\n  }\r\n\r\n  static getDate() {\r\n    return SelectedDate.#date.getDate();\r\n  }\r\n\r\n  static getFullYear() {\r\n    return SelectedDate.#date.getFullYear();\r\n  }\r\n}\r\n","import Month from \"./Month\";\r\nexport default class Year {\r\n  #number;\r\n  #monthRepository = [];\r\n  #TOTAL_MONTH_LENGTH = 12;\r\n\r\n  constructor(yearNumber) {\r\n    this.#number = yearNumber;\r\n    this.addMonthsToRepository();\r\n  }\r\n\r\n  addMonthsToRepository() {\r\n    for (let i = 0; i < this.#TOTAL_MONTH_LENGTH; i++) {\r\n      const newMonth = new Month(this, i);\r\n      this.#monthRepository.push(newMonth);\r\n    }\r\n  }\r\n\r\n  getMonth(dateObject) {\r\n    return this.#monthRepository.find((month) => {\r\n      return (\r\n        month.getYearNumber() === dateObject.getFullYear() &&\r\n        month.getNumber() === dateObject.getMonth()\r\n      );\r\n    });\r\n  }\r\n\r\n  getNumber() {\r\n    return this.#number;\r\n  }\r\n}\r\n","import Year from \"./Year\";\r\n\r\nexport default class YearRepository {\r\n  static #years = [];\r\n\r\n  static createNewYear(dateObject) {\r\n    const newYear = new Year(dateObject.getFullYear());\r\n    YearRepository.#addYearToRepository(newYear);\r\n  }\r\n\r\n  static #addYearToRepository(newYear) {\r\n    YearRepository.#years.push(newYear);\r\n  }\r\n\r\n  static hasYearInRepository(yearNumber) {\r\n    return (\r\n      YearRepository.#years.filter((yearObject) => {\r\n        return yearObject.getNumber() === yearNumber;\r\n      }).length !== 0\r\n    );\r\n  }\r\n\r\n  static getYear(dateObject) {\r\n    return YearRepository.#years.find((yearObject) => {\r\n      return yearObject.getNumber() === dateObject.getFullYear();\r\n    });\r\n  }\r\n}\r\n","export const DAYS = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n","export const selectedDateText = document.getElementById(\"jsSelectedDateText\");\r\nexport const selectedMonthText = document.getElementById(\"jsSelectedMonthText\");\r\nexport const selectedDayText = document.getElementById(\"jsSelectedDayText\");\r\nexport const selectedYearText = document.getElementById(\"jsSelectedYearText\");\r\nexport const allDatesInCalendar = document.querySelectorAll(\r\n  \"#jsCalendarTable > tbody td\"\r\n);\r\nexport const previousMonthButton = document.getElementById(\r\n  \"jsPreviousMonthButton\"\r\n);\r\nexport const nextMonthButton = document.getElementById(\"jsNextMonthButton\");\r\nexport const differenceWithClickedDate = document.getElementById(\r\n  \"jsDifferenceWithClickedDate\"\r\n);\r\nexport const boardElement = document.getElementById(\"jsBoard\");\r\nexport const boardDateText = document.getElementById(\"jsBoardDateText\");\r\nexport const boardButtonDeleteAll = document.getElementById(\r\n  \"jsBoardButtonDeleteAll\"\r\n);\r\nexport const boardButtonAdd = document.getElementById(\"jsBoardButtonAdd\");\r\nexport const boardFormContainer = document.getElementById(\r\n  \"jsBoardFormContainer\"\r\n);\r\n\r\nexport const taskContentTextInput = document.getElementById(\r\n  \"jsTaskContentTextInput\"\r\n);\r\nexport const taskSubmissionOK = document.getElementById(\"jsTaskSubmissionOK\");\r\nexport const taskSubmissionCancel = document.getElementById(\r\n  \"jsTaskSubmissionCancel\"\r\n);\r\nexport const taskList = document.getElementById(\"jsTaskList\");\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import CalendarController from \"./calendar/CalendarController\";\r\n\r\nnew CalendarController();\r\n"],"sourceRoot":""}